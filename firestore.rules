rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    match /app/{origin}/posts/{id} {
      allow read: if true
      allow create: if request.auth != null && request.auth.uid != null && request.auth.uid != "" && 
      request.resource.data.likes == 0;
      allow update: if request.auth != null &&
      (resource.data.userId == resource.data.userId) &&
      (editingOnlyAllowedFields(["content", "title"]) ? request.auth.uid == resource.data.userId  : true) &&
      (editingOnlyAllowedFields(["likes"]) ? request.auth.uid != resource.data.userId  : true) &&
      (editingOnlyAllowedFields(["userLiked"]) ? false : true) &&
      (editingOnlyAllowedFields(["likes"]) ? !resource.data.userLiked.hasAny([request.auth.uid]) : true) &&
      ((resource.data.likes - request.resource.data.likes) <= 1 && (resource.data.likes - request.resource.data.likes) >= -1);
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    
    match /app/{origin}/categories/{id} {
     allow read: if true
     allow create: if false
     allow update: if false
     allow delete: if false
    }
  }
}

// Make sure the request has only the specified allowed fields    
function editingOnlyAllowedFields(allowedFields) {
    let editedKeys = request.resource.data.diff(resource.data).affectedKeys();
    return editedKeys.hasOnly(allowedFields);
}

